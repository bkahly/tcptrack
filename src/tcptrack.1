.TH TCPTRACK 1 "2023-02-06"
.SH NAME
tcptrack \- Monitor TCP connections on the network
.SH SYNOPSIS
.B tcptrack
[
.B -dhnpv
] [
.BI -r\  seconds
] 
.BI -i\  interface
|
.BI -T\  pcap_file
[
.I pcap filter expression
]
.SH DESCRIPTION
.B tcptrack
displays the status of TCP connections that it sees on a given network
interface.
.B tcptrack
monitors their state and displays information such as state,
source/destination addresses and bandwidth usage in a sorted, updated list
very much like the
.BR top (1)
command.

The filter expression is a standard pcap filter expression (identical to
the expressions used by
.BR tcpdump (8))
which can be used to filter down the characteristics of TCP connections
that
.B tcptrack
will see. See
.BR pcap-filter (7)
for more information about the syntax of this expression.

.SH OPTIONS
.TP
.B \-d
Only track connections that were started after
.B tcptrack
was started. Do not try to detect existing connections.
.TP
.B \-h
Display command line help
.TP
.BI \-i\  interface
Sniff packets from the specified network interface.
.TP
.BI \-T\  pcap_file
Read packets from the specified file instead of sniffing from the network.
Useful for testing.
.TP
.B \-n
Don't convert addresses (i.e., host addresses, port numbers, etc.) to
names.
.TP
.B \-p
Do not put the interface being sniffed into promiscuous mode.
.TP
.BI \-r\  seconds
Wait this many seconds before removing a closed connection from the
display. Defaults to 2 seconds. See also the pause interactive command
(below).
.TP
.B \-v
Display
.B tcptrack
version
.SH "INTERACTIVE COMMANDS"
The following keys may be pressed while
.B tcptrack
is running to change runtime options:

.B p
- Pause/unpause display. No new connections will be added to the display,
and all currently displayed connections will remain in the display.

.B q
- Quit
.B tcptrack.

.B s
- Cycle through the sorting options: unsorted, sorted by rate, sorted by
total bytes, sorted by idle time.

.B UP/DN/PGUP/PGDN
- Scroll the display to view connections on the second page, etc.

.B +/-
Increase/Decrease the display refresh rate. Default is 1 second. Each
increase cuts the refresh interval in half, and likewise each decrease
doubles the refresh interval.

The options for pausing and toggling sorting are useful if you're watching
a very busy network and want to look at the display without connections
jumping around (due to sorting and new connections being added) and
disappearing (due to being closed for a certain time). 

When paused (via the p command) no new connections will be displayed,
however
.B tcptrack
will still monitor and track all connections it sees as
usual. This option affects the display only, not internals. When you
unpause, the display will be updated with all current information that
.B tcptrack
has been gathering all along.
.SH "EXAMPLES"
.B tcptrack
requires only one parameter to run: the
.B -i
flag followed by an interface name that you want
.B tcptrack
to monitor. This is the most basic way to run
.B tcptrack
:

.B # tcptrack -i eth0

.B tcptrack
can also take a pcap filter expression as an argument. The format of this
filter expression is the same as that of
.BR tcpdump (8)
and other libpcap-based sniffers. The following example will only show
connections from host 10.45.165.2:

.B # tcptrack -i eth0 src or dst 10.45.165.2

The next example will only show web traffic (ie, traffic on port 80):

.B # tcptrack -i eth0 port 80

.SH "SEE ALSO"
.BR tcpdump (8),\  pcap-filter (7)

.SH BUGS
When picking up a connection that was already running before
.B tcptrack
was started, there is no way
.B tcptrack
can know for sure which end of the connection is the client (ie, which peer
started the connection) and which is the server (ie, which peer was
listening).
.B tcptrack
makes a crude guess at which is which by looking at the port numbers;
whichever end has the lower port number is considered the server side.
This isn't always accurate of course, but future versions may have better
heuristics to figure out which end is which.

IPv6 is not supported well.
